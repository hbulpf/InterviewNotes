(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{376:function(v,_,l){"use strict";l.r(_);var i=l(42),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("ol",[l("li",[v._v("怎么理解数据结构？")]),v._v(" "),l("li",[v._v("什么是斐波那契数列？")]),v._v(" "),l("li",[v._v("迭代和递归的特点，并比较优缺点")]),v._v(" "),l("li",[v._v("了解哪些查找算法，时间复杂度都是多少？")]),v._v(" "),l("li",[v._v("了解哪些排序算法，并比较一下，以及适用场景")]),v._v(" "),l("li",[v._v("快排的基本思路是什么？最差的时间复杂度是多少？如何优化？")]),v._v(" "),l("li",[v._v("AVL树插入或删除一个节点的过程是怎样的？")]),v._v(" "),l("li",[v._v("什么是红黑树？")]),v._v(" "),l("li",[v._v("100盏灯问题")]),v._v(" "),l("li",[v._v("老鼠和毒药问题，加个条件，必须要求第二天出结果")]),v._v(" "),l("li",[v._v("海量数据问题")]),v._v(" "),l("li",[v._v("（手写算法）二分查找")]),v._v(" "),l("li",[v._v("（手写算法）反转链表")]),v._v(" "),l("li",[v._v("（手写算法）用两个栈实现队列")]),v._v(" "),l("li",[v._v("（手写算法）多线程轮流打印问题")]),v._v(" "),l("li",[v._v("（手写算法）如何判断一个链有环/两条链交叉")]),v._v(" "),l("li",[v._v("（手写算法）快速从一组无序数中找到第k大的数/前k个大的数")]),v._v(" "),l("li",[v._v("（手写算法）最长（不）重复子串")])])])}),[],!1,null,null,null);_.default=t.exports}}]);